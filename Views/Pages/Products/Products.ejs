<%- include('../../Partials/Headers') %>
<body class="dashboard w-full flex overflow-hidden relative">
  <!-- desktop and large screens aside -->
  <%- include('../../partials/Desktop_aside') %>
  <!-- main section of page -->
  <main class="w-full overflow-hidden">
    <%- include('../../partials/MainHeader') %>

    <!-- main section -->
    <section
      class="Dashboard_section w-[98%] m-auto mt-2 overflow-auto h-screen"
    >
      <!-- top Title bar -->
      <div class="titleBar flex items-center gap-2 my-5">
        <ion-icon name="home" class="text-[13px] text-gray-500"></ion-icon>
        <h1 class="text-[13px] text-gray-500">/</h1>
        <h1 class="text-[13px] text-gray-500" id="locationUrl"></h1>
      </div>

      <!-- Product list -->
      <div class="add_and_search flex items-center justify-between">
        <button
          id="showAddProduct"
          class="px-3 py-1 border border-slate-300 hover:bg-slate-800 hover:text-white rounded-[3px] cursor-pointer ease-in duration-150"
        >
          Add new
        </button>
        <!-- search Product -->

        <% if (productList.length > 0){ %>

        <div class="tools flex items-center gap-5">
          <!-- print button -->
          <div class="print flex items-center gap-1">
            <ion-icon name="print" class="text-[20px]"></ion-icon>
            <small
              class="font-medium hover:text-gray-500 cursor-pointer"
              onclick="printTable()"
              >Print</small
            >
          </div>
          <!-- search input -->
          <div class="search relative md:w-[400px]">
            <input
              type="text"
              class="px-3 py-1 border border-slate-300 w-full outline-none focus:border-slate-400"
              placeholder="Search Category"
            />
            <ion-icon
              name="search-outline"
              class="absolute right-2 top-2 cursor-pointer text-slate-500 hover:text-slate-800"
            ></ion-icon>
          </div>
        </div>
        <% } %>
      </div>

      <!-- Data table -->
      <div class="w-full mt-5 overflow-x-auto">
        <% if(productList.length == 0){ %>
        <div
          class="no_data w-full h-max flex items-center justify-center flex-col gap-5"
        >
          <img src="/Assets/noData.png" alt="no data image" class="w-[300px]" />
          <p class="text-[12px] text-slate-500 flex items-center gap-1">
            <ion-icon
              name="alert-circle-outline"
              class="text-[15px]"
            ></ion-icon>
            There is no data availabe now, press add new button to create one
          </p>
        </div>
        <% } else{%>
        <table id="allData" class="w-full shadow">
          <thead class="bg-slate-100 font-medium">
            <tr>
              <td class="py-3 px-2 text-[14px]">ID</td>
              <td class="py-3 px-2 text-[14px]">icon</td>
              <td class="py-3 px-2 text-[14px]">Product name</td>
              <td class="py-3 px-2 text-[14px]">Price</td>
              <td class="py-3 px-2 text-[14px]">Category</td>
              <td class="py-3 px-2 text-[14px]">Type</td>
              <td class="py-3 px-2 text-[14px]">Edit</td>
              <td class="py-3 px-2 text-[14px]">Delete</td>
            </tr>
          </thead>
          <tbody class="">
            <% productList.forEach(c => { %>
            <tr class="border-b border-slate-200 hover:bg-slate-50">
              <td class="py-3 px-2 text-[14px]"><%= c.id %></td>
              <td class="py-3 px-2 text-[14px]">
                <img
                  src="<%= c.cover_Image %>  %>"
                  alt="icon-image"
                  class="w-[20px] h-[20px] border border-gray-300 shadow"
                />
              </td>
              <td class="py-3 px-2 text-[14px]"><%= c.Product_name %></td>
              <td class="py-3 px-2 text-[14px]">$<%= c.price %></td>
              <td class="py-3 px-2 text-[14px]"><%= c.catergory_name %></td>
              <td class="py-3 px-2 text-[14px]"><%= c.type_name %></td>
              <td class="py-3 px-2 text-[14px]">
                <a href="#">
                  <ion-icon
                    name="create-outline"
                    onclick="updateProduct(`<%=c.id%>`,`<%=c.Product_name%>`,`<%=c.price%>`,`<%=c.Description%>`)"
                    class="text-[18px] text-green-800 cursor-pointer group-hover:name-create"
                  ></ion-icon>
                </a>
              </td>
              <td class="py-3 px-2 text-[14px]">
                <ion-icon
                  id="deleteCategory"
                  name="trash-outline"
                  onclick="deleteConfirm(`<%=c.id%>`,`<%=c.Product_name%>`)"
                  class="text-[18px] text-red-700 cursor-pointer"
                ></ion-icon>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
        <% } %>
      </div>
      <!-- category list end -->
    </section>
  </main>
  <!-- Add Category -->
  <%- include('./components/AddProduct') %> <%-
  include('./components/UpdateProduct') %>
  <!-- show alert -->
  <%- include('../../partials/Alert') %> <%-
  include('../../partials/DeleteAlert') %>
</body>

<!-- ionIcons link -->
<script
  type="module"
  src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"
></script>
<script
  nomodule
  src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"
></script>

<script>
  let locationUrl = document.getElementById("locationUrl");
  let path = window.location.pathname;
  console.log(locationUrl);
  locationUrl.innerText = path.replace("/", "");

  // show add product
  let add_product = document.getElementById("add_product");
  document.getElementById("showAddProduct").addEventListener("click", () => {
    add_product.classList.remove("hidden");
    add_product.classList.add("flex");
  });

  // close Product
  document.getElementById("close_product").addEventListener("click", () => {
    add_product.classList.remove("flex");
    add_product.classList.add("hidden");
  });

  // handle delete
  function deleteConfirm(id, name) {
    document.getElementById("deleteAlert").classList.remove("hidden");
    document.getElementById("deleteAlert").classList.add("flex");
    // console.log(id);
    document.getElementById(
      "deleteText"
    ).innerText = `Are you sure you want to delete ${name}`;
    document.getElementById("YesBtn").addEventListener("click", async () => {
      // console.log("yes clicked by id of " + id);
      // window.location.href = `/deleteProduct/${id}`;
      let realId = parseInt(id);
      console.log(typeof realId);
      try {
        let deletePost = await fetch(
          "http://localhost:3000/deleteProduct" + realId,
          {
            method: "DELETE",
            headers: { "Content-Type": "application/json" },
          }
        );
        let response = await deletePost;
        console.log(response);
        let data = await response.json();
        // console.log(data);
        if (response.status == 200) {
          // remove delete alert
          document.getElementById("deleteAlert").classList.add("hidden");
          document.getElementById("deleteAlert").classList.remove("flex");
          //show success alert
          document.getElementById("show_alert").classList.add("flex");
          document.getElementById("show_alert").classList.remove("hidden");
          document.getElementById("alertText").innerText = data.message;

          setTimeout(() => {
            document.getElementById("show_alert").classList.remove("flex");
            document.getElementById("show_alert").classList.add("hidden");
            window.location.reload();
          }, 2000);
        }
      } catch (error) {
        console.log(error);
      }
    });
  }

  // handle update
  function updateProduct(id, name, price, description) {
    // console.log(typeof id);
    let newId = parseInt(id);
    let product_name_update = document.getElementById("product_name_update");
    let product_price_update = document.getElementById("product_price_update");
    let Product_Description = document.getElementById("Product_Description");

    product_name_update.value = name;
    product_price_update.value = price;
    Product_Description.value = description;
    // console.log(catInput);
    document.getElementById("update_product").classList.remove("hidden");
    document.getElementById("update_product").classList.add("flex");

    // hide update category form
    document
      .getElementById("close_update_product")
      .addEventListener("click", () => {
        document.getElementById("update_product").classList.add("hidden");
        document.getElementById("update_product").classList.remove("flex");
      });

    //form handle
    let update_product_form = document.getElementById("update_product_form");

    update_product_form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const fdata = new FormData(update_product_form);
      try {
        let request = await fetch(
          "http://localhost:3000/updateProduct" + newId,
          {
            method: "PUT",
            body: fdata,
          }
        );
        let response = await request;

        let data = await response.json();

        if (response.status == 200) {
          // remove update form
          document.getElementById("update_product").classList.add("hidden");
          document.getElementById("update_product").classList.remove("flex");
          //show success alert
          document.getElementById("show_alert").classList.add("flex");
          document.getElementById("show_alert").classList.remove("hidden");
          document.getElementById("alertText").innerText = data.message;

          setTimeout(() => {
            document.getElementById("show_alert").classList.remove("flex");
            document.getElementById("show_alert").classList.add("hidden");
            window.location.reload();
          }, 2000);
        }
      } catch (error) {
        console.log(error);
      }
    });
  }

  // handle print
  function printTable() {
    var table = document.getElementById("allData");
    var newWin = window.open("", "Print-Window");
    newWin.document.open();
    newWin.document.write(
      "<html><head><style>table {border-collapse: collapse; width: 100%;} th, td {border: 1px solid #dddddd; text-align: left; padding: 8px;} th {background-color: #f2f2f2;}</style></head><body>"
    );
    newWin.document.write("<h2>Table Data</h2>");
    newWin.document.write(table.outerHTML);
    newWin.document.write("</body></html>");
    newWin.document.close();
    newWin.print();
  }
</script>
